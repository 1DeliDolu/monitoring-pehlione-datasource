{"version":3,"file":"module.js","mappings":"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","sources":["webpack://monitoring-pehlione-datasource/external amd \"@grafana/ui\"","webpack://monitoring-pehlione-datasource/external amd \"module\"","webpack://monitoring-pehlione-datasource/external amd \"@grafana/runtime\"","webpack://monitoring-pehlione-datasource/external amd \"@grafana/data\"","webpack://monitoring-pehlione-datasource/external amd \"react\"","webpack://monitoring-pehlione-datasource/webpack/bootstrap","webpack://monitoring-pehlione-datasource/webpack/runtime/compat get default export","webpack://monitoring-pehlione-datasource/webpack/runtime/define property getters","webpack://monitoring-pehlione-datasource/webpack/runtime/hasOwnProperty shorthand","webpack://monitoring-pehlione-datasource/webpack/runtime/make namespace object","webpack://monitoring-pehlione-datasource/webpack/runtime/publicPath","webpack://monitoring-pehlione-datasource/./node_modules/grafana-public-path.js","webpack://monitoring-pehlione-datasource/./types.ts","webpack://monitoring-pehlione-datasource/./datasource.ts","webpack://monitoring-pehlione-datasource/./module.ts","webpack://monitoring-pehlione-datasource/./components/ConfigEditor.tsx","webpack://monitoring-pehlione-datasource/./components/QueryEditor.tsx"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__308__;","module.exports = __WEBPACK_EXTERNAL_MODULE__531__;","module.exports = __WEBPACK_EXTERNAL_MODULE__781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__959__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"public/plugins/monitoring-pehlione-datasource/\";","\nimport amdMetaModule from 'amd-module';\n\n__webpack_public_path__ =\n  amdMetaModule && amdMetaModule.uri\n    ? amdMetaModule.uri.slice(0, amdMetaModule.uri.lastIndexOf('/') + 1)\n    : 'public/plugins/monitoring-pehlione-datasource/';\n","import { DataSourceJsonData } from '@grafana/data';\nimport { DataQuery } from '@grafana/schema';\n\nexport interface MyQuery extends DataQuery {\n  queryText?: string;\n  constant: number;\n}\n\nexport const DEFAULT_QUERY: Partial<MyQuery> = {\n  constant: 6.5,\n};\n\nexport interface DataPoint {\n  Time: number;\n  Value: number;\n}\n\nexport interface DataSourceResponse {\n  datapoints: DataPoint[];\n}\n\n/**\n * These are options configured for each DataSource instance\n */\nexport interface MyDataSourceOptions extends DataSourceJsonData {\n  path?: string;\n}\n\n/**\n * Value that is used in the backend, but never sent over HTTP to the frontend\n */\nexport interface MySecureJsonData {\n  apiKey?: string;\n}\n","import { DataSourceInstanceSettings, CoreApp, ScopedVars } from '@grafana/data';\nimport { DataSourceWithBackend, getTemplateSrv } from '@grafana/runtime';\n\nimport { MyQuery, MyDataSourceOptions, DEFAULT_QUERY } from './types';\n\nexport class DataSource extends DataSourceWithBackend<MyQuery, MyDataSourceOptions> {\n  constructor(instanceSettings: DataSourceInstanceSettings<MyDataSourceOptions>) {\n    super(instanceSettings);\n  }\n\n  getDefaultQuery(_: CoreApp): Partial<MyQuery> {\n    return DEFAULT_QUERY;\n  }\n\n  applyTemplateVariables(query: MyQuery, scopedVars: ScopedVars) {\n    return {\n      ...query,\n      queryText: getTemplateSrv().replace(query.queryText, scopedVars),\n    };\n  }\n\n  filterQuery(query: MyQuery): boolean {\n    // if no query has been provided, prevent the query from being executed\n    return !!query.queryText;\n  }\n}\n","import { DataSourcePlugin } from '@grafana/data';\nimport { DataSource } from './datasource';\nimport { ConfigEditor } from './components/ConfigEditor';\nimport { QueryEditor } from './components/QueryEditor';\nimport { MyQuery, MyDataSourceOptions } from './types';\n\nexport const plugin = new DataSourcePlugin<DataSource, MyQuery, MyDataSourceOptions>(DataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor);\n","import React, { ChangeEvent } from 'react';\nimport { InlineField, Input, SecretInput } from '@grafana/ui';\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { MyDataSourceOptions, MySecureJsonData } from '../types';\n\ninterface Props extends DataSourcePluginOptionsEditorProps<MyDataSourceOptions, MySecureJsonData> {}\n\nexport function ConfigEditor(props: Props) {\n  const { onOptionsChange, options } = props;\n  const { jsonData, secureJsonFields, secureJsonData } = options;\n\n  const onPathChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...jsonData,\n        path: event.target.value,\n      },\n    });\n  };\n\n  // Secure field (only sent to the backend)\n  const onAPIKeyChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onOptionsChange({\n      ...options,\n      secureJsonData: {\n        apiKey: event.target.value,\n      },\n    });\n  };\n\n  const onResetAPIKey = () => {\n    onOptionsChange({\n      ...options,\n      secureJsonFields: {\n        ...options.secureJsonFields,\n        apiKey: false,\n      },\n      secureJsonData: {\n        ...options.secureJsonData,\n        apiKey: '',\n      },\n    });\n  };\n\n  return (\n    <>\n      <InlineField label=\"Path\" labelWidth={14} interactive tooltip={'Json field returned to frontend'}>\n        <Input\n          id=\"config-editor-path\"\n          onChange={onPathChange}\n          value={jsonData.path}\n          placeholder=\"Enter the path, e.g. /api/v1\"\n          width={40}\n        />\n      </InlineField>\n      <InlineField label=\"API Key\" labelWidth={14} interactive tooltip={'Secure json field (backend only)'}>\n        <SecretInput\n          required\n          id=\"config-editor-api-key\"\n          isConfigured={secureJsonFields.apiKey}\n          value={secureJsonData?.apiKey}\n          placeholder=\"Enter your API key\"\n          width={40}\n          onReset={onResetAPIKey}\n          onChange={onAPIKeyChange}\n        />\n      </InlineField>\n    </>\n  );\n}\n","import React, { ChangeEvent } from 'react';\nimport { InlineField, Input, Stack } from '@grafana/ui';\nimport { QueryEditorProps } from '@grafana/data';\nimport { DataSource } from '../datasource';\nimport { MyDataSourceOptions, MyQuery } from '../types';\n\ntype Props = QueryEditorProps<DataSource, MyQuery, MyDataSourceOptions>;\n\nexport function QueryEditor({ query, onChange, onRunQuery }: Props) {\n  const onQueryTextChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange({ ...query, queryText: event.target.value });\n  };\n\n  const onConstantChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange({ ...query, constant: parseFloat(event.target.value) });\n    // executes the query\n    onRunQuery();\n  };\n\n  const { queryText, constant } = query;\n\n  return (\n    <Stack gap={0}>\n      <InlineField label=\"Constant\">\n        <Input\n          id=\"query-editor-constant\"\n          onChange={onConstantChange}\n          value={constant}\n          width={8}\n          type=\"number\"\n          step=\"0.1\"\n        />\n      </InlineField>\n      <InlineField label=\"Query Text\" labelWidth={16} tooltip=\"Not used yet\">\n        <Input\n          id=\"query-editor-query-text\"\n          onChange={onQueryTextChange}\n          value={queryText || ''}\n          required\n          placeholder=\"Enter a query\"\n        />\n      </InlineField>\n    </Stack>\n  );\n}\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__308__","__WEBPACK_EXTERNAL_MODULE__531__","__WEBPACK_EXTERNAL_MODULE__781__","__WEBPACK_EXTERNAL_MODULE__959__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","p","slice","lastIndexOf","DEFAULT_QUERY","constant","DataSource","DataSourceWithBackend","getDefaultQuery","_","applyTemplateVariables","query","scopedVars","queryText","getTemplateSrv","replace","filterQuery","constructor","instanceSettings","super","plugin","DataSourcePlugin","setConfigEditor","props","onOptionsChange","options","jsonData","secureJsonFields","secureJsonData","InlineField","label","labelWidth","interactive","tooltip","Input","id","onChange","event","path","target","placeholder","width","SecretInput","required","isConfigured","apiKey","onReset","setQueryEditor","onRunQuery","Stack","gap","parseFloat","type","step"],"sourceRoot":""}